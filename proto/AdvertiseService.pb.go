// Code generated by protoc-gen-go. DO NOT EDIT.
// source: AdvertiseService.proto

package AdvertiseService

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AdversiteType int32

const (
	AdversiteType_CAROUSEL AdversiteType = 0
	AdversiteType_TILE     AdversiteType = 1
	AdversiteType_PRIME    AdversiteType = 2
)

var AdversiteType_name = map[int32]string{
	0: "CAROUSEL",
	1: "TILE",
	2: "PRIME",
}

var AdversiteType_value = map[string]int32{
	"CAROUSEL": 0,
	"TILE":     1,
	"PRIME":    2,
}

func (x AdversiteType) String() string {
	return proto.EnumName(AdversiteType_name, int32(x))
}

func (AdversiteType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_05528710a5f4fccf, []int{0}
}

type GetAdd struct {
	Genre                []string `protobuf:"bytes,1,rep,name=genre,proto3" json:"genre,omitempty"`
	Language             []string `protobuf:"bytes,2,rep,name=language,proto3" json:"language,omitempty"`
	Categories           []string `protobuf:"bytes,3,rep,name=categories,proto3" json:"categories,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAdd) Reset()         { *m = GetAdd{} }
func (m *GetAdd) String() string { return proto.CompactTextString(m) }
func (*GetAdd) ProtoMessage()    {}
func (*GetAdd) Descriptor() ([]byte, []int) {
	return fileDescriptor_05528710a5f4fccf, []int{0}
}

func (m *GetAdd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAdd.Unmarshal(m, b)
}
func (m *GetAdd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAdd.Marshal(b, m, deterministic)
}
func (m *GetAdd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAdd.Merge(m, src)
}
func (m *GetAdd) XXX_Size() int {
	return xxx_messageInfo_GetAdd.Size(m)
}
func (m *GetAdd) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAdd.DiscardUnknown(m)
}

var xxx_messageInfo_GetAdd proto.InternalMessageInfo

func (m *GetAdd) GetGenre() []string {
	if m != nil {
		return m.Genre
	}
	return nil
}

func (m *GetAdd) GetLanguage() []string {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *GetAdd) GetCategories() []string {
	if m != nil {
		return m.Categories
	}
	return nil
}

type DeleteAdvertiseReq struct {
	Brand                string   `protobuf:"bytes,1,opt,name=brand,proto3" json:"brand,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAdvertiseReq) Reset()         { *m = DeleteAdvertiseReq{} }
func (m *DeleteAdvertiseReq) String() string { return proto.CompactTextString(m) }
func (*DeleteAdvertiseReq) ProtoMessage()    {}
func (*DeleteAdvertiseReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_05528710a5f4fccf, []int{1}
}

func (m *DeleteAdvertiseReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAdvertiseReq.Unmarshal(m, b)
}
func (m *DeleteAdvertiseReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAdvertiseReq.Marshal(b, m, deterministic)
}
func (m *DeleteAdvertiseReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAdvertiseReq.Merge(m, src)
}
func (m *DeleteAdvertiseReq) XXX_Size() int {
	return xxx_messageInfo_DeleteAdvertiseReq.Size(m)
}
func (m *DeleteAdvertiseReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAdvertiseReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAdvertiseReq proto.InternalMessageInfo

func (m *DeleteAdvertiseReq) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *DeleteAdvertiseReq) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type DeleteAdvertiseResp struct {
	IsSucessfull         bool     `protobuf:"varint,1,opt,name=isSucessfull,proto3" json:"isSucessfull,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAdvertiseResp) Reset()         { *m = DeleteAdvertiseResp{} }
func (m *DeleteAdvertiseResp) String() string { return proto.CompactTextString(m) }
func (*DeleteAdvertiseResp) ProtoMessage()    {}
func (*DeleteAdvertiseResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_05528710a5f4fccf, []int{2}
}

func (m *DeleteAdvertiseResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAdvertiseResp.Unmarshal(m, b)
}
func (m *DeleteAdvertiseResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAdvertiseResp.Marshal(b, m, deterministic)
}
func (m *DeleteAdvertiseResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAdvertiseResp.Merge(m, src)
}
func (m *DeleteAdvertiseResp) XXX_Size() int {
	return xxx_messageInfo_DeleteAdvertiseResp.Size(m)
}
func (m *DeleteAdvertiseResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAdvertiseResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAdvertiseResp proto.InternalMessageInfo

func (m *DeleteAdvertiseResp) GetIsSucessfull() bool {
	if m != nil {
		return m.IsSucessfull
	}
	return false
}

type Advertise struct {
	StartTime            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime              *timestamp.Timestamp `protobuf:"bytes,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Title                string               `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Image                string               `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	Video                string               `protobuf:"bytes,5,opt,name=video,proto3" json:"video,omitempty"`
	Target               *Target              `protobuf:"bytes,6,opt,name=target,proto3" json:"target,omitempty"`
	Genre                []string             `protobuf:"bytes,7,rep,name=genre,proto3" json:"genre,omitempty"`
	Language             []string             `protobuf:"bytes,8,rep,name=language,proto3" json:"language,omitempty"`
	Categories           []string             `protobuf:"bytes,9,rep,name=categories,proto3" json:"categories,omitempty"`
	Position             string               `protobuf:"bytes,10,opt,name=position,proto3" json:"position,omitempty"`
	AdversiteType        AdversiteType        `protobuf:"varint,11,opt,name=AdversiteType,json=adversiteType,proto3,enum=AdvertiseService.AdversiteType" json:"AdversiteType,omitempty"`
	ViewCount            float32              `protobuf:"fixed32,12,opt,name=viewCount,proto3" json:"viewCount,omitempty"`
	ClickCount           float32              `protobuf:"fixed32,13,opt,name=clickCount,proto3" json:"clickCount,omitempty"`
	ViewDuration         *duration.Duration   `protobuf:"bytes,14,opt,name=viewDuration,proto3" json:"viewDuration,omitempty"`
	Brand                string               `protobuf:"bytes,15,opt,name=brand,proto3" json:"brand,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Advertise) Reset()         { *m = Advertise{} }
func (m *Advertise) String() string { return proto.CompactTextString(m) }
func (*Advertise) ProtoMessage()    {}
func (*Advertise) Descriptor() ([]byte, []int) {
	return fileDescriptor_05528710a5f4fccf, []int{3}
}

func (m *Advertise) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Advertise.Unmarshal(m, b)
}
func (m *Advertise) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Advertise.Marshal(b, m, deterministic)
}
func (m *Advertise) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Advertise.Merge(m, src)
}
func (m *Advertise) XXX_Size() int {
	return xxx_messageInfo_Advertise.Size(m)
}
func (m *Advertise) XXX_DiscardUnknown() {
	xxx_messageInfo_Advertise.DiscardUnknown(m)
}

var xxx_messageInfo_Advertise proto.InternalMessageInfo

func (m *Advertise) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *Advertise) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *Advertise) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Advertise) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Advertise) GetVideo() string {
	if m != nil {
		return m.Video
	}
	return ""
}

func (m *Advertise) GetTarget() *Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *Advertise) GetGenre() []string {
	if m != nil {
		return m.Genre
	}
	return nil
}

func (m *Advertise) GetLanguage() []string {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Advertise) GetCategories() []string {
	if m != nil {
		return m.Categories
	}
	return nil
}

func (m *Advertise) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

func (m *Advertise) GetAdversiteType() AdversiteType {
	if m != nil {
		return m.AdversiteType
	}
	return AdversiteType_CAROUSEL
}

func (m *Advertise) GetViewCount() float32 {
	if m != nil {
		return m.ViewCount
	}
	return 0
}

func (m *Advertise) GetClickCount() float32 {
	if m != nil {
		return m.ClickCount
	}
	return 0
}

func (m *Advertise) GetViewDuration() *duration.Duration {
	if m != nil {
		return m.ViewDuration
	}
	return nil
}

func (m *Advertise) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

type Target struct {
	Package              string   `protobuf:"bytes,1,opt,name=package,proto3" json:"package,omitempty"`
	Url                  string   `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Target) Reset()         { *m = Target{} }
func (m *Target) String() string { return proto.CompactTextString(m) }
func (*Target) ProtoMessage()    {}
func (*Target) Descriptor() ([]byte, []int) {
	return fileDescriptor_05528710a5f4fccf, []int{4}
}

func (m *Target) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Target.Unmarshal(m, b)
}
func (m *Target) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Target.Marshal(b, m, deterministic)
}
func (m *Target) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Target.Merge(m, src)
}
func (m *Target) XXX_Size() int {
	return xxx_messageInfo_Target.Size(m)
}
func (m *Target) XXX_DiscardUnknown() {
	xxx_messageInfo_Target.DiscardUnknown(m)
}

var xxx_messageInfo_Target proto.InternalMessageInfo

func (m *Target) GetPackage() string {
	if m != nil {
		return m.Package
	}
	return ""
}

func (m *Target) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func init() {
	proto.RegisterEnum("AdvertiseService.AdversiteType", AdversiteType_name, AdversiteType_value)
	proto.RegisterType((*GetAdd)(nil), "AdvertiseService.GetAdd")
	proto.RegisterType((*DeleteAdvertiseReq)(nil), "AdvertiseService.DeleteAdvertiseReq")
	proto.RegisterType((*DeleteAdvertiseResp)(nil), "AdvertiseService.DeleteAdvertiseResp")
	proto.RegisterType((*Advertise)(nil), "AdvertiseService.Advertise")
	proto.RegisterType((*Target)(nil), "AdvertiseService.Target")
}

func init() { proto.RegisterFile("AdvertiseService.proto", fileDescriptor_05528710a5f4fccf) }

var fileDescriptor_05528710a5f4fccf = []byte{
	// 624 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0xc5, 0x49, 0x9b, 0x26, 0xd3, 0xb4, 0x8d, 0x16, 0x04, 0x5b, 0x53, 0xd1, 0xc8, 0xa2, 0x52,
	0x95, 0x43, 0x52, 0x85, 0x1e, 0xa0, 0x12, 0x12, 0x55, 0x1b, 0xa1, 0x4a, 0x45, 0x20, 0x37, 0xbd,
	0x70, 0xdb, 0xda, 0x53, 0x6b, 0x55, 0xc7, 0x36, 0xbb, 0xeb, 0x20, 0xae, 0x48, 0x7c, 0x01, 0x1f,
	0xc3, 0x87, 0xf0, 0x0b, 0xdc, 0xf9, 0x05, 0xb4, 0xeb, 0x38, 0xb1, 0xe3, 0xb6, 0x70, 0xe1, 0xe6,
	0x79, 0xef, 0xed, 0xcc, 0xce, 0xcc, 0xf3, 0xc2, 0xe3, 0x63, 0x7f, 0x8a, 0x42, 0x71, 0x89, 0x17,
	0x28, 0xa6, 0xdc, 0xc3, 0x7e, 0x22, 0x62, 0x15, 0x93, 0xce, 0x32, 0x6e, 0xdb, 0x41, 0x1c, 0x07,
	0x21, 0x0e, 0x58, 0xc2, 0x07, 0x8a, 0x4f, 0x50, 0x2a, 0x36, 0x49, 0x32, 0xb5, 0xbd, 0x53, 0xe0,
	0x58, 0x14, 0xc5, 0x8a, 0x29, 0x1e, 0x47, 0x72, 0xc6, 0x6e, 0x17, 0x58, 0x3f, 0x15, 0x86, 0xcb,
	0x28, 0xe7, 0x23, 0x34, 0xde, 0xa2, 0x3a, 0xf6, 0x7d, 0xf2, 0x08, 0x56, 0x03, 0x8c, 0x04, 0x52,
	0xab, 0x5b, 0xdf, 0x6f, 0xb9, 0x59, 0x40, 0x6c, 0x68, 0x86, 0x2c, 0x0a, 0x52, 0x16, 0x20, 0xad,
	0x19, 0x62, 0x1e, 0x93, 0x67, 0x00, 0x1e, 0x53, 0x18, 0xc4, 0x82, 0xa3, 0xa4, 0x75, 0xc3, 0x16,
	0x10, 0xe7, 0x0d, 0x90, 0x53, 0x0c, 0x51, 0xe1, 0xbc, 0x15, 0x17, 0x3f, 0xe9, 0x3a, 0x57, 0x82,
	0x45, 0x3e, 0xb5, 0xba, 0x96, 0xae, 0x63, 0x02, 0x8d, 0x2a, 0xae, 0x42, 0x5d, 0xc4, 0xa0, 0x26,
	0x70, 0x5e, 0xc1, 0xc3, 0x4a, 0x06, 0x99, 0x10, 0x07, 0xda, 0x5c, 0x5e, 0xa4, 0x1e, 0x4a, 0x79,
	0x9d, 0x86, 0xa1, 0xc9, 0xd4, 0x74, 0x4b, 0x98, 0xf3, 0x63, 0x05, 0x5a, 0xf3, 0x53, 0xe4, 0x25,
	0xb4, 0xa4, 0x62, 0x42, 0x8d, 0xf9, 0x04, 0x8d, 0x7c, 0x7d, 0x68, 0xf7, 0xb3, 0xa9, 0x64, 0x83,
	0xb8, 0x4a, 0xaf, 0xfb, 0xe3, 0x7c, 0xa8, 0xee, 0x42, 0x4c, 0x0e, 0x61, 0x0d, 0x23, 0xdf, 0x9c,
	0xab, 0xfd, 0xf5, 0x5c, 0x2e, 0x5d, 0xb4, 0x53, 0x2f, 0xb4, 0xa3, 0x51, 0x3e, 0xd1, 0x93, 0x5c,
	0xc9, 0x50, 0x13, 0x68, 0x74, 0xca, 0x7d, 0x8c, 0xe9, 0x6a, 0x86, 0x9a, 0x80, 0x1c, 0x40, 0x43,
	0x31, 0x11, 0xa0, 0xa2, 0x0d, 0x53, 0x96, 0xf6, 0x2b, 0x46, 0x19, 0x1b, 0xde, 0x9d, 0xe9, 0x16,
	0x0b, 0x5c, 0xbb, 0x6b, 0x81, 0xcd, 0x7b, 0x17, 0xd8, 0x5a, 0x5e, 0xa0, 0x3e, 0x9b, 0xc4, 0x92,
	0x6b, 0xbb, 0x50, 0x30, 0x97, 0x9b, 0xc7, 0x64, 0x04, 0x1b, 0xe6, 0x42, 0x92, 0x2b, 0x1c, 0x7f,
	0x49, 0x90, 0xae, 0x77, 0xad, 0xfd, 0xcd, 0xe1, 0x6e, 0xf5, 0x9a, 0x25, 0x99, 0xbb, 0xc1, 0x8a,
	0x21, 0xd9, 0x81, 0xd6, 0x94, 0xe3, 0xe7, 0x93, 0x38, 0x8d, 0x14, 0x6d, 0x77, 0xad, 0xfd, 0x9a,
	0xbb, 0x00, 0xcc, 0x05, 0x43, 0xee, 0xdd, 0x64, 0xf4, 0x86, 0xa1, 0x0b, 0x08, 0x79, 0x0d, 0x6d,
	0x2d, 0x3e, 0x9d, 0x79, 0x9a, 0x6e, 0x9a, 0x51, 0x6d, 0x57, 0x36, 0x94, 0x0b, 0xdc, 0x92, 0x7c,
	0x61, 0xc5, 0xad, 0x82, 0x15, 0x9d, 0x43, 0x68, 0x64, 0x93, 0x25, 0x14, 0xd6, 0x12, 0xe6, 0xdd,
	0xe8, 0xd1, 0x65, 0x66, 0xcd, 0x43, 0xd2, 0x81, 0x7a, 0x2a, 0xc2, 0x99, 0x59, 0xf5, 0x67, 0x6f,
	0xb8, 0x34, 0x0f, 0xd2, 0x86, 0xe6, 0xc9, 0xb1, 0xfb, 0xfe, 0xf2, 0x62, 0x74, 0xde, 0x79, 0x40,
	0x9a, 0xb0, 0x32, 0x3e, 0x3b, 0x1f, 0x75, 0x2c, 0xd2, 0x82, 0xd5, 0x0f, 0xee, 0xd9, 0xbb, 0x51,
	0xa7, 0x36, 0xfc, 0x5d, 0x87, 0xca, 0x6f, 0x4e, 0x04, 0x6c, 0x9d, 0x08, 0x64, 0x05, 0xcf, 0x93,
	0xa7, 0x77, 0x0c, 0x55, 0x03, 0xf6, 0x7d, 0xa4, 0xb3, 0xf7, 0xf5, 0xe7, 0xaf, 0xef, 0xb5, 0x5d,
	0xc7, 0x1e, 0xb0, 0x1c, 0x1b, 0x78, 0xe5, 0xec, 0x47, 0x56, 0x8f, 0xdc, 0x40, 0xdb, 0xbc, 0x02,
	0x79, 0xc1, 0x5b, 0xcc, 0x96, 0xbd, 0x12, 0xf7, 0x57, 0x73, 0x4c, 0xb5, 0x1d, 0xe7, 0x49, 0xa1,
	0x5a, 0x50, 0xc8, 0x7b, 0x64, 0xf5, 0x0e, 0x2c, 0xdd, 0xe0, 0x65, 0xe2, 0xff, 0xc7, 0x06, 0xd3,
	0x72, 0x76, 0xdd, 0xe0, 0x37, 0x0b, 0xb6, 0x96, 0x5e, 0x12, 0xf2, 0xbc, 0x9a, 0xb7, 0xfa, 0x5c,
	0xd9, 0x7b, 0xff, 0xa0, 0x92, 0xc9, 0xad, 0xf7, 0xf0, 0xcb, 0xba, 0x23, 0xab, 0x77, 0xd5, 0x30,
	0x96, 0x7c, 0xf1, 0x27, 0x00, 0x00, 0xff, 0xff, 0x78, 0x03, 0x8e, 0x40, 0xf6, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AdvertiseServiceClient is the client API for AdvertiseService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AdvertiseServiceClient interface {
	//Schedular CRUD
	CreateAdvertise(ctx context.Context, in *Advertise, opts ...grpc.CallOption) (*Advertise, error)
	GetAdvertise(ctx context.Context, in *GetAdd, opts ...grpc.CallOption) (AdvertiseService_GetAdvertiseClient, error)
	UpdateAdvertise(ctx context.Context, in *Advertise, opts ...grpc.CallOption) (*Advertise, error)
	DeleteAdvertise(ctx context.Context, in *DeleteAdvertiseReq, opts ...grpc.CallOption) (*DeleteAdvertiseResp, error)
}

type advertiseServiceClient struct {
	cc *grpc.ClientConn
}

func NewAdvertiseServiceClient(cc *grpc.ClientConn) AdvertiseServiceClient {
	return &advertiseServiceClient{cc}
}

func (c *advertiseServiceClient) CreateAdvertise(ctx context.Context, in *Advertise, opts ...grpc.CallOption) (*Advertise, error) {
	out := new(Advertise)
	err := c.cc.Invoke(ctx, "/AdvertiseService.AdvertiseService/CreateAdvertise", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *advertiseServiceClient) GetAdvertise(ctx context.Context, in *GetAdd, opts ...grpc.CallOption) (AdvertiseService_GetAdvertiseClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AdvertiseService_serviceDesc.Streams[0], "/AdvertiseService.AdvertiseService/GetAdvertise", opts...)
	if err != nil {
		return nil, err
	}
	x := &advertiseServiceGetAdvertiseClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type AdvertiseService_GetAdvertiseClient interface {
	Recv() (*Advertise, error)
	grpc.ClientStream
}

type advertiseServiceGetAdvertiseClient struct {
	grpc.ClientStream
}

func (x *advertiseServiceGetAdvertiseClient) Recv() (*Advertise, error) {
	m := new(Advertise)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *advertiseServiceClient) UpdateAdvertise(ctx context.Context, in *Advertise, opts ...grpc.CallOption) (*Advertise, error) {
	out := new(Advertise)
	err := c.cc.Invoke(ctx, "/AdvertiseService.AdvertiseService/UpdateAdvertise", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *advertiseServiceClient) DeleteAdvertise(ctx context.Context, in *DeleteAdvertiseReq, opts ...grpc.CallOption) (*DeleteAdvertiseResp, error) {
	out := new(DeleteAdvertiseResp)
	err := c.cc.Invoke(ctx, "/AdvertiseService.AdvertiseService/DeleteAdvertise", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdvertiseServiceServer is the server API for AdvertiseService service.
type AdvertiseServiceServer interface {
	//Schedular CRUD
	CreateAdvertise(context.Context, *Advertise) (*Advertise, error)
	GetAdvertise(*GetAdd, AdvertiseService_GetAdvertiseServer) error
	UpdateAdvertise(context.Context, *Advertise) (*Advertise, error)
	DeleteAdvertise(context.Context, *DeleteAdvertiseReq) (*DeleteAdvertiseResp, error)
}

// UnimplementedAdvertiseServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAdvertiseServiceServer struct {
}

func (*UnimplementedAdvertiseServiceServer) CreateAdvertise(ctx context.Context, req *Advertise) (*Advertise, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAdvertise not implemented")
}
func (*UnimplementedAdvertiseServiceServer) GetAdvertise(req *GetAdd, srv AdvertiseService_GetAdvertiseServer) error {
	return status.Errorf(codes.Unimplemented, "method GetAdvertise not implemented")
}
func (*UnimplementedAdvertiseServiceServer) UpdateAdvertise(ctx context.Context, req *Advertise) (*Advertise, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAdvertise not implemented")
}
func (*UnimplementedAdvertiseServiceServer) DeleteAdvertise(ctx context.Context, req *DeleteAdvertiseReq) (*DeleteAdvertiseResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAdvertise not implemented")
}

func RegisterAdvertiseServiceServer(s *grpc.Server, srv AdvertiseServiceServer) {
	s.RegisterService(&_AdvertiseService_serviceDesc, srv)
}

func _AdvertiseService_CreateAdvertise_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Advertise)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdvertiseServiceServer).CreateAdvertise(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AdvertiseService.AdvertiseService/CreateAdvertise",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdvertiseServiceServer).CreateAdvertise(ctx, req.(*Advertise))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdvertiseService_GetAdvertise_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetAdd)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AdvertiseServiceServer).GetAdvertise(m, &advertiseServiceGetAdvertiseServer{stream})
}

type AdvertiseService_GetAdvertiseServer interface {
	Send(*Advertise) error
	grpc.ServerStream
}

type advertiseServiceGetAdvertiseServer struct {
	grpc.ServerStream
}

func (x *advertiseServiceGetAdvertiseServer) Send(m *Advertise) error {
	return x.ServerStream.SendMsg(m)
}

func _AdvertiseService_UpdateAdvertise_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Advertise)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdvertiseServiceServer).UpdateAdvertise(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AdvertiseService.AdvertiseService/UpdateAdvertise",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdvertiseServiceServer).UpdateAdvertise(ctx, req.(*Advertise))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdvertiseService_DeleteAdvertise_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAdvertiseReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdvertiseServiceServer).DeleteAdvertise(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AdvertiseService.AdvertiseService/DeleteAdvertise",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdvertiseServiceServer).DeleteAdvertise(ctx, req.(*DeleteAdvertiseReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _AdvertiseService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "AdvertiseService.AdvertiseService",
	HandlerType: (*AdvertiseServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAdvertise",
			Handler:    _AdvertiseService_CreateAdvertise_Handler,
		},
		{
			MethodName: "UpdateAdvertise",
			Handler:    _AdvertiseService_UpdateAdvertise_Handler,
		},
		{
			MethodName: "DeleteAdvertise",
			Handler:    _AdvertiseService_DeleteAdvertise_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetAdvertise",
			Handler:       _AdvertiseService_GetAdvertise_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "AdvertiseService.proto",
}
